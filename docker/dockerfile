# Этап сборки фронтенда
FROM node:18-alpine as frontend-builder

WORKDIR /app

# 1. Устанавливаем Tailwind CSS глобально (без зависимостей от package.json)
RUN npm install -g tailwindcss@3.4.0 postcss@8.4.35 autoprefixer@10.4.17

# 2. Копируем только необходимые для сборки файлы
COPY tailwind.config.js ./
COPY src/main/resources/static/css/tailwind.css ./css/

# 3. Собираем CSS с явным указанием путей
RUN tailwindcss -i ./css/tailwind.css -o ./css/output.css --minify

# Этап сборки Java (с Maven и JDK 21)
FROM maven:3.8.6-eclipse-temurin-21-alpine as backend-builder

WORKDIR /app

# 4. Копируем весь проект (включая сгенерированный CSS)
COPY --from=frontend-builder /app/css/output.css /app/src/main/resources/static/css/
COPY . .

# 5. Собираем Java-приложение (с кэшированием Maven-зависимостей)
RUN mvn -B dependency:go-offline
RUN mvn -B clean package -DskipTests

# Финальный образ (минимальный JRE 21)
FROM eclipse-temurin:21-jre-alpine
WORKDIR /app

# 6. Копируем только собранный JAR (без исходного кода)
COPY --from=backend-builder /app/target/*.jar app.jar

EXPOSE 8080
ENTRYPOINT ["java", "-jar", "app.jar"]